# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import inventory_pb2 as inventory__pb2


class CategoryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCategory = channel.unary_unary(
                '/CategoryService/CreateCategory',
                request_serializer=inventory__pb2.CategoryRequest.SerializeToString,
                response_deserializer=inventory__pb2.ID.FromString,
                )
        self.GetCategories = channel.unary_unary(
                '/CategoryService/GetCategories',
                request_serializer=inventory__pb2.PaginationRequest.SerializeToString,
                response_deserializer=inventory__pb2.CategoryResponseList.FromString,
                )
        self.GetCategory = channel.unary_unary(
                '/CategoryService/GetCategory',
                request_serializer=inventory__pb2.ID.SerializeToString,
                response_deserializer=inventory__pb2.CategoryResponse.FromString,
                )
        self.UpdateCategory = channel.unary_unary(
                '/CategoryService/UpdateCategory',
                request_serializer=inventory__pb2.UpdateCategoryRequest.SerializeToString,
                response_deserializer=inventory__pb2.ID.FromString,
                )
        self.DeleteCategory = channel.unary_unary(
                '/CategoryService/DeleteCategory',
                request_serializer=inventory__pb2.ID.SerializeToString,
                response_deserializer=inventory__pb2.Empty.FromString,
                )
        self.SearchCategory = channel.unary_unary(
                '/CategoryService/SearchCategory',
                request_serializer=inventory__pb2.SearchRequest.SerializeToString,
                response_deserializer=inventory__pb2.CategoryResponseList.FromString,
                )


class CategoryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCategories(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CategoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCategory,
                    request_deserializer=inventory__pb2.CategoryRequest.FromString,
                    response_serializer=inventory__pb2.ID.SerializeToString,
            ),
            'GetCategories': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCategories,
                    request_deserializer=inventory__pb2.PaginationRequest.FromString,
                    response_serializer=inventory__pb2.CategoryResponseList.SerializeToString,
            ),
            'GetCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCategory,
                    request_deserializer=inventory__pb2.ID.FromString,
                    response_serializer=inventory__pb2.CategoryResponse.SerializeToString,
            ),
            'UpdateCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCategory,
                    request_deserializer=inventory__pb2.UpdateCategoryRequest.FromString,
                    response_serializer=inventory__pb2.ID.SerializeToString,
            ),
            'DeleteCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCategory,
                    request_deserializer=inventory__pb2.ID.FromString,
                    response_serializer=inventory__pb2.Empty.SerializeToString,
            ),
            'SearchCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchCategory,
                    request_deserializer=inventory__pb2.SearchRequest.FromString,
                    response_serializer=inventory__pb2.CategoryResponseList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CategoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CategoryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CategoryService/CreateCategory',
            inventory__pb2.CategoryRequest.SerializeToString,
            inventory__pb2.ID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCategories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CategoryService/GetCategories',
            inventory__pb2.PaginationRequest.SerializeToString,
            inventory__pb2.CategoryResponseList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CategoryService/GetCategory',
            inventory__pb2.ID.SerializeToString,
            inventory__pb2.CategoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CategoryService/UpdateCategory',
            inventory__pb2.UpdateCategoryRequest.SerializeToString,
            inventory__pb2.ID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CategoryService/DeleteCategory',
            inventory__pb2.ID.SerializeToString,
            inventory__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CategoryService/SearchCategory',
            inventory__pb2.SearchRequest.SerializeToString,
            inventory__pb2.CategoryResponseList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ProductServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateProduct = channel.unary_unary(
                '/ProductService/CreateProduct',
                request_serializer=inventory__pb2.ProductRequest.SerializeToString,
                response_deserializer=inventory__pb2.ID.FromString,
                )
        self.GetProducts = channel.unary_unary(
                '/ProductService/GetProducts',
                request_serializer=inventory__pb2.PaginationRequest.SerializeToString,
                response_deserializer=inventory__pb2.ProductResponseList.FromString,
                )
        self.GetProduct = channel.unary_unary(
                '/ProductService/GetProduct',
                request_serializer=inventory__pb2.ID.SerializeToString,
                response_deserializer=inventory__pb2.ProductResponse.FromString,
                )
        self.UpdateProduct = channel.unary_unary(
                '/ProductService/UpdateProduct',
                request_serializer=inventory__pb2.UpdateProductRequest.SerializeToString,
                response_deserializer=inventory__pb2.ID.FromString,
                )
        self.DeleteProduct = channel.unary_unary(
                '/ProductService/DeleteProduct',
                request_serializer=inventory__pb2.ID.SerializeToString,
                response_deserializer=inventory__pb2.Empty.FromString,
                )
        self.SearchProduct = channel.unary_unary(
                '/ProductService/SearchProduct',
                request_serializer=inventory__pb2.SearchRequest.SerializeToString,
                response_deserializer=inventory__pb2.ProductResponseList.FromString,
                )


class ProductServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProduct,
                    request_deserializer=inventory__pb2.ProductRequest.FromString,
                    response_serializer=inventory__pb2.ID.SerializeToString,
            ),
            'GetProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProducts,
                    request_deserializer=inventory__pb2.PaginationRequest.FromString,
                    response_serializer=inventory__pb2.ProductResponseList.SerializeToString,
            ),
            'GetProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProduct,
                    request_deserializer=inventory__pb2.ID.FromString,
                    response_serializer=inventory__pb2.ProductResponse.SerializeToString,
            ),
            'UpdateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProduct,
                    request_deserializer=inventory__pb2.UpdateProductRequest.FromString,
                    response_serializer=inventory__pb2.ID.SerializeToString,
            ),
            'DeleteProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProduct,
                    request_deserializer=inventory__pb2.ID.FromString,
                    response_serializer=inventory__pb2.Empty.SerializeToString,
            ),
            'SearchProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchProduct,
                    request_deserializer=inventory__pb2.SearchRequest.FromString,
                    response_serializer=inventory__pb2.ProductResponseList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ProductService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProductService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductService/CreateProduct',
            inventory__pb2.ProductRequest.SerializeToString,
            inventory__pb2.ID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductService/GetProducts',
            inventory__pb2.PaginationRequest.SerializeToString,
            inventory__pb2.ProductResponseList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductService/GetProduct',
            inventory__pb2.ID.SerializeToString,
            inventory__pb2.ProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductService/UpdateProduct',
            inventory__pb2.UpdateProductRequest.SerializeToString,
            inventory__pb2.ID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductService/DeleteProduct',
            inventory__pb2.ID.SerializeToString,
            inventory__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductService/SearchProduct',
            inventory__pb2.SearchRequest.SerializeToString,
            inventory__pb2.ProductResponseList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class OrderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateOrder = channel.unary_unary(
                '/OrderService/CreateOrder',
                request_serializer=inventory__pb2.OrderRequest.SerializeToString,
                response_deserializer=inventory__pb2.ID.FromString,
                )
        self.GetOrdersByUser = channel.unary_unary(
                '/OrderService/GetOrdersByUser',
                request_serializer=inventory__pb2.ID.SerializeToString,
                response_deserializer=inventory__pb2.OrderResponseList.FromString,
                )
        self.GetOrder = channel.unary_unary(
                '/OrderService/GetOrder',
                request_serializer=inventory__pb2.ID.SerializeToString,
                response_deserializer=inventory__pb2.OrderResponse.FromString,
                )
        self.SearchOrder = channel.unary_unary(
                '/OrderService/SearchOrder',
                request_serializer=inventory__pb2.SearchRequest.SerializeToString,
                response_deserializer=inventory__pb2.OrderResponseList.FromString,
                )


class OrderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrdersByUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrder,
                    request_deserializer=inventory__pb2.OrderRequest.FromString,
                    response_serializer=inventory__pb2.ID.SerializeToString,
            ),
            'GetOrdersByUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrdersByUser,
                    request_deserializer=inventory__pb2.ID.FromString,
                    response_serializer=inventory__pb2.OrderResponseList.SerializeToString,
            ),
            'GetOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrder,
                    request_deserializer=inventory__pb2.ID.FromString,
                    response_serializer=inventory__pb2.OrderResponse.SerializeToString,
            ),
            'SearchOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchOrder,
                    request_deserializer=inventory__pb2.SearchRequest.FromString,
                    response_serializer=inventory__pb2.OrderResponseList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'OrderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OrderService/CreateOrder',
            inventory__pb2.OrderRequest.SerializeToString,
            inventory__pb2.ID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrdersByUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OrderService/GetOrdersByUser',
            inventory__pb2.ID.SerializeToString,
            inventory__pb2.OrderResponseList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OrderService/GetOrder',
            inventory__pb2.ID.SerializeToString,
            inventory__pb2.OrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OrderService/SearchOrder',
            inventory__pb2.SearchRequest.SerializeToString,
            inventory__pb2.OrderResponseList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
